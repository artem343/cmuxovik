# Generated by Django 3.0.3 on 2020-03-24 18:40

from django.db import migrations, transaction
import json
from dateutil import parser, tz
from django.contrib.auth.models import User
from django.core.exceptions import ObjectDoesNotExist
from django.db.utils import IntegrityError
from datetime import datetime

import logging
import sys

logging.basicConfig(stream=sys.stdout, level=logging.DEBUG)

AUTHOR_USERNAME = 'twitter'


@transaction.atomic
def fill_cmuxes(apps, schema_editor):
    Cmux = apps.get_model("cmuxovik", "Cmux")
    Author = apps.get_model("cmuxovik", "Author")

    try:
        user = User.objects.get(username=AUTHOR_USERNAME)
    except ObjectDoesNotExist:
        user = User.objects.create_user(username=AUTHOR_USERNAME,
                                        email='sample@email.com',
                                        password='unusablepassword')
        user.set_unusable_password()
        user.save()

    author = Author.objects.get(user_id=user.id)

    with open('data/twitter_cmuxes.json') as f:
        j_cmuxes = json.load(f)
        for j_cmux in j_cmuxes:
            try:
                cmux, created = Cmux.objects.get_or_create(
                    text=j_cmux['text'],
                    author=author,
                    is_approved=True
                )
                if created:
                    cmux.created_at = datetime.strptime(
                        j_cmux['time'], '%d.%m.%Y %H:%M:%S')
                    cmux.save()
            except IntegrityError:
                logging.warning(f"Cmux exists, passing: {j_cmux['text']}")

# logic for migrating backwards


def delete_cmuxes(apps, schema_editor):
    Cmux = apps.get_model("cmuxovik", "Cmux")
    Cmux.objects.filter(author__user__username=AUTHOR_USERNAME).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('cmuxovik', '0005_data_book'),
    ]

    operations = [
        migrations.RunPython(fill_cmuxes, delete_cmuxes),
    ]
