name: production deployment

on:
  push:
    branches:
      - master

env:
  WEB_IMAGE: docker.pkg.github.com/$GITHUB_REPOSITORY/web
  NGINX_IMAGE: docker.pkg.github.com/$GITHUB_REPOSITORY/nginx

jobs:
  deploy:
    name: Deploy to Prod server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Add environment variables to .env
        run: |
          echo DEBUG=0 >> .env
          echo SQL_ENGINE=django.db.backends.postgresql >> .env
          echo DATABASE=postgres >> .env
          echo SECRET_KEY=${{ secrets.PROD_SECRET_KEY }} >> .env
          echo SQL_DATABASE=${{ secrets.PROD_SQL_DATABASE }} >> .env
          echo SQL_USER=${{ secrets.PROD_SQL_USER }} >> .env
          echo SQL_PASSWORD=${{ secrets.PROD_SQL_PASSWORD }} >> .env
          echo SQL_HOST=${{ secrets.PROD_SQL_HOST }} >> .env
          echo POSTGRES_USER=${{ secrets.PROD_SQL_USER }} >> .env.db
          echo POSTGRES_PASSWORD=${{ secrets.PROD_SQL_PASSWORD }} >> .env.db
          echo POSTGRES_DB=${{ secrets.PROD_SQL_DATABASE }} >> .env.db
          echo WEB_IMAGE=${{ env.WEB_IMAGE }} >> .env
          echo NGINX_IMAGE=${{ env.NGINX_IMAGE }} >> .env
      - name: Add the private SSH key to the ssh-agent
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-add - <<< "${{ secrets.PROD_PRIVATE_KEY }}"
      - name: Build and deploy images on Prod server
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          scp  -o StrictHostKeyChecking=no -r ./.env ./docker-compose.prod.yml ${{ secrets.PROD_SERVER_USER }}@${{ secrets.PROD_SERVER_IP }}:~/cmuxovik
          ssh -o StrictHostKeyChecking=no ${{ secrets.PROD_SERVER_USER }}@${{ secrets.PROD_SERVER_IP }} << 'ENDSSH'
            cd ~/cmuxovik
            source .env
            docker login docker.pkg.github.com -u ${GITHUB_ACTOR} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull $WEB_IMAGE
            docker pull $NGINX_IMAGE
            docker-compose -f docker-compose.prod.yml up -d
          ENDSSH
